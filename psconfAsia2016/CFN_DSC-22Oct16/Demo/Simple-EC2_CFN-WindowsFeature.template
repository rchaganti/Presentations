{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template enables Web Server role.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Description": "Amazon EC2 instance type",
      "Type": "String",
      "Default": "m4.large",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "Roles": {
      "Description": "A SPACE seperated list of roles that you want to enable on this instance. Valid values are AD-Certificate, AD-Domain-Services, ADLDS, DHCP, DNS, Fax, File-Services, NPAS, Print-Services, Web-Server, and WDS.",
      "Type": "String",
      "Default": "None",
      "AllowedPattern": "(((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS))( ((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS)))*)|(None)"
    },
    "SourceCidrForRDP": {
      "Description": "IP Cidr from which you are likely to RDP into the instances. You can add rules later by modifying the created security groups e.g. 54.32.98.160/32",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
    },
    "SourceCidrForHTTP": {
      "Description": "IP Cidr from which you are likely to HTTP into the instances. You can add rules later by modifying the created security groups e.g. 54.32.98.160/32",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
    }
  },
  "Mappings": {
    "AWSRegion2AMI": {
      "us-east-1": {
        "Windows2008r2": "ami-7d7f026a",
        "Windows2012r2": "ami-ee7805f9"
      },
      "us-west-2": {
        "Windows2008r2": "ami-8505d7e5",
        "Windows2012r2": "ami-2827f548"
      },
      "us-west-1": {
        "Windows2008r2": "ami-576c2337",
        "Windows2012r2": "ami-c06b24a0"
      },
      "eu-west-1": {
        "Windows2008r2": "ami-ea84fd99",
        "Windows2012r2": "ami-9b81f8e8"
      },
      "eu-central-1": {
        "Windows2008r2": "ami-a947b5c6",
        "Windows2012r2": "ami-7248ba1d"
      },
      "ap-northeast-1": {
        "Windows2008r2": "ami-1efc2d7f",
        "Windows2012r2": "ami-fffd2c9e"
      },
      "ap-northeast-2": {
        "Windows2008r2": "ami-3323f65d",
        "Windows2012r2": "ami-ee20f580"
      },
      "ap-southeast-1": {
        "Windows2008r2": "ami-be5389dd",
        "Windows2012r2": "ami-ac5389cf"
      },
      "ap-southeast-2": {
        "Windows2008r2": "ami-2a9eaf49",
        "Windows2012r2": "ami-899eafea"
      },
      "ap-south-1": {
        "Windows2008r2": "ami-43fd882c",
        "Windows2012r2": "ami-75fe8b1a"
      },
      "sa-east-1": {
        "Windows2008r2": "ami-a02bbbcc",
        "Windows2012r2": "ami-8e2fbfe2"
      },
      "cn-north-1": {
        "Windows2008r2": "ami-ca68bda7",
        "Windows2012r2": "ami-246cb949"
      }
    }
  },
  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable RDP",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": {
              "Ref": "SourceCidrForRDP"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": {
              "Ref": "SourceCidrForHTTP"
            }
          }          
        ]
      }
    },
    "WindowsServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WindowsServer",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "1-install-roles": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "if not \"None\" EQU \"",
                      {
                        "Ref": "Roles"
                      },
                      "\" (servermanagercmd -install ",
                      {
                        "Ref": "Roles"
                      },
                      " -restart)"
                    ]
                  ]
                }
              },
              "2-signal-success": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "cfn-signal.exe -e %ERRORLEVEL% \"",
                      {
                        "Fn::Base64": {
                          "Ref": "WindowsServerWaitHandle"
                        }
                      },
                      "\""
                    ]
                  ]
                }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "c:\\cfn\\cfn-hup.conf",
                    "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegion2AMI",
            {
              "Ref": "AWS::Region"
            },
            "Windows2008r2"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WindowsServer",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "WindowsServerWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WindowsServerWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "WindowsServer",
      "Properties": {
        "Handle": {
          "Ref": "WindowsServerWaitHandle"
        },
        "Timeout": "1800"
      }
    }
  },
  "Outputs": {
    "RolesEnabled": {
      "Value": {
        "Ref": "Roles"
      },
      "Description": "Roles enabled on this instance."
    }
  }
}